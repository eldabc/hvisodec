<?php

namespace Siwapp\UserBundle\Repository;

use Knp\Component\Pager\PaginatorInterface;
use Siwapp\UserBundle\Entity\User;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    public function paginatedSearch(array $params, $limit = 50, $page = 1)
    {
        if (!$this->paginator) {
            throw new \RuntimeException('You have to set a paginator first using setPaginator() method');
        }
        
        $qb = $this->getEntityManager()
        ->createQueryBuilder()
        ->select('u')
        ->from(User::class, 'u');
        foreach ($params as $field => $value) {
            if ($value === null) {
                continue;
            }
            if ($field == 'terms') {
                $terms = $qb->expr()->literal("%$value%");
                $qb->andWhere($qb->expr()->orX(
                    $qb->expr()->like('u.username', $terms),
                    $qb->expr()->like('u.email', $terms),
                    $qb->expr()->like('u.enabled', $terms),
                    $qb->expr()->like('u.last_login', $terms),
                    $qb->expr()->like('u.roles', $terms)
                    ));
            }
        }
        
        return $this->paginator->paginate($qb->getQuery(), $page, $limit);
    }
    
    /**
     * There is no easy way to inject things into repositories yet.
     */
    public function setPaginator(PaginatorInterface $paginator)
    {
        $this->paginator = $paginator;
    }
}
